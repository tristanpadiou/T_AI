[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "T-AI-project"
version = "0.1.8"
description = "A Simplified Agent Framework built on top of pydantic_ai to create ai agent with tools,mcps and memory/deps management"
# Make README path relative to project root (hide for hugging face spaces)
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Tristan Padiou", email = "padioutristan@gmail.com"},
]
keywords = ["ai", "assistant", "mcp", "pydantic-ai", "google-ai", "openai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    
    "pydantic-ai>=0.6.2",
    "tavily-python>=0.5.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "black>=22.0",
    "isort>=5.10",
    "flake8>=4.0",
    "mypy>=0.950",
    "pre-commit>=2.15",
    "ipykernel>=6.30.1",
    "pip>=25.2",
]

[project.urls]
Homepage = "https://github.com/yourusername/cortana-agent"
Documentation = "https://github.com/yourusername/cortana-agent#readme"
Repository = "https://github.com/yourusername/cortana-agent"
"Bug Tracker" = "https://github.com/yourusername/cortana-agent/issues"

# Hatchling configuration
[tool.hatch.build.targets.wheel]
packages = ["src/t_ai"]

# UV configuration
[tool.uv]
dev-dependencies = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "black>=22.0",
    "isort>=5.10",
    "flake8>=4.0",
    "mypy>=0.950",
    "pre-commit>=2.15",
]

[tool.uv.sources]
# Add any specific source configurations here if needed

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["t_agent", "utils","PrebuiltTools"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto" 
